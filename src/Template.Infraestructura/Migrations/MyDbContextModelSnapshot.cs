// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Template.Infraestructura.ORM;

#nullable disable

namespace Template.Infraestructure.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Template.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Jose Ramon"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Hernan Perez"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Ramon Castro"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Alex Rodriguez"
                        });
                });

            modelBuilder.Entity("Template.Domain.Entities.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("EsCuentaPrincipal")
                        .HasColumnType("bit");

                    b.Property<decimal>("Saldo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Cuentas");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            ClienteId = 1,
                            EsCuentaPrincipal = true,
                            Saldo = 157500.25m
                        },
                        new
                        {
                            Id = 102,
                            ClienteId = 1,
                            EsCuentaPrincipal = false,
                            Saldo = 25300.75m
                        },
                        new
                        {
                            Id = 103,
                            ClienteId = 2,
                            EsCuentaPrincipal = true,
                            Saldo = 80200.00m
                        },
                        new
                        {
                            Id = 104,
                            ClienteId = 3,
                            EsCuentaPrincipal = false,
                            Saldo = 80200.00m
                        });
                });

            modelBuilder.Entity("Template.Domain.Entities.Movimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TarjetaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TarjetaId");

                    b.ToTable("Movimientos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Compra supermercado",
                            Fecha = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = -9500.00m,
                            TarjetaId = 1001
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Pago seguro auto",
                            Fecha = new DateTime(2024, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = -12000.00m,
                            TarjetaId = 1001
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Farmacia",
                            Fecha = new DateTime(2024, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = -6500.00m,
                            TarjetaId = 1001
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Electrodoméstico",
                            Fecha = new DateTime(2024, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = -43000.00m,
                            TarjetaId = 1001
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Spotify Premium",
                            Fecha = new DateTime(2024, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = -1999.00m,
                            TarjetaId = 1001
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Carga SUBE",
                            Fecha = new DateTime(2024, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = -1500.00m,
                            TarjetaId = 1001
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Compra secundaria",
                            Fecha = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = -3000.00m,
                            TarjetaId = 1002
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Cena en restaurante",
                            Fecha = new DateTime(2024, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = -7500.00m,
                            TarjetaId = 2001
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Pago Netflix",
                            Fecha = new DateTime(2024, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = -3000.00m,
                            TarjetaId = 2001
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Compra electro",
                            Fecha = new DateTime(2024, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = -18000.00m,
                            TarjetaId = 2001
                        },
                        new
                        {
                            Id = 11,
                            Descripcion = "Compra Carro",
                            Fecha = new DateTime(2024, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = -18000.00m,
                            TarjetaId = 2001
                        });
                });

            modelBuilder.Entity("Template.Domain.Entities.Tarjeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CuentaId")
                        .HasColumnType("int");

                    b.Property<bool>("EsPrincipal")
                        .HasColumnType("bit");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CuentaId");

                    b.ToTable("Tarjetas");

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            CuentaId = 101,
                            EsPrincipal = true,
                            Numero = "4509-8701-2345-6789"
                        },
                        new
                        {
                            Id = 1002,
                            CuentaId = 101,
                            EsPrincipal = false,
                            Numero = "4509-8701-2345-6789"
                        },
                        new
                        {
                            Id = 2001,
                            CuentaId = 103,
                            EsPrincipal = true,
                            Numero = "4510-2301-3345-1244"
                        });
                });

            modelBuilder.Entity("Template.Domain.Entities.Cuenta", b =>
                {
                    b.HasOne("Template.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Cuentas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Template.Domain.Entities.Movimiento", b =>
                {
                    b.HasOne("Template.Domain.Entities.Tarjeta", "Tarjeta")
                        .WithMany("Movimiento")
                        .HasForeignKey("TarjetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("Template.Domain.Entities.Tarjeta", b =>
                {
                    b.HasOne("Template.Domain.Entities.Cuenta", "Cuenta")
                        .WithMany("Tarjetas")
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("Template.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Cuentas");
                });

            modelBuilder.Entity("Template.Domain.Entities.Cuenta", b =>
                {
                    b.Navigation("Tarjetas");
                });

            modelBuilder.Entity("Template.Domain.Entities.Tarjeta", b =>
                {
                    b.Navigation("Movimiento");
                });
#pragma warning restore 612, 618
        }
    }
}
